spring:
  application:
    name: circuit-breaker-resilience4j
  cloud:
    openfeign:
      client:
        config:
          default:
            connect-timeout: ${common.http.client.hc5.connect-timeout}
            read-timeout: ${common.http.client.hc5.socket-timeout}
          #            logger-level: FULL
          restClient:
            url: http://127.0.0.1:8080/
          invalidRestClient:
            url: http://127.0.0.1:38080/
      httpclient:
        hc5:
          enabled: true

eureka:
  client:
    register-with-eureka: false
    fetch-registry: false

common:
  http:
    client:
      hc5:
        connect-timeout: 3000
        socket-timeout: 5000

resilience4j:
  circuitbreaker:
    configs:
      default:
        register-health-indicator: true
        waitDurationInOpenState: 10s
        ignoreExceptions:
          - com.github.ksewen.yorozuya.common.exception.InvalidParamException
    instances:
      clientService:
        minimum-number-of-calls: 10
        failure-rate-threshold: 50
      clientServiceWithLoadBalancer:
        minimum-number-of-calls: 15
        failure-rate-threshold: 20
      feignClientServer:
        minimum-number-of-calls: 10
        failure-rate-threshold: 50
  ratelimiter:
    configs:
      default:
        registerHealthIndicator: true
    instances:
      clientService:
        limitForPeriod: 20
        limitRefreshPeriod: 30s
        timeoutDuration: 5s
      feignClientServer:
        limitForPeriod: 20
        limitRefreshPeriod: 30s
        timeoutDuration: 5s

management:
  endpoints:
    web:
      exposure:
        include:
          - info
          - health
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true

#debug: true
